print("üß™ Testing All 5 Models...\n")

# Test 1: Classifier
print("1Ô∏è‚É£ Testing Classifier...")
try:
    from transformers import AutoTokenizer, AutoModelForSequenceClassification
    tokenizer = AutoTokenizer.from_pretrained("rajinikarcg/RequirementClassifier")
    model = AutoModelForSequenceClassification.from_pretrained("rajinikarcg/RequirementClassifier")
    print("   ‚úÖ Classifier loaded!\n")
except Exception as e:
    print(f"   ‚ùå Error: {e}\n")

# Test 2: Embedder
print("2Ô∏è‚É£ Testing Embedder...")
try:
    from transformers import AutoTokenizer, AutoModel
    tokenizer = AutoTokenizer.from_pretrained("Qwen/Qwen3-Embedding-8B")
    model = AutoModel.from_pretrained("Qwen/Qwen3-Embedding-8B")
    print("   ‚úÖ Embedder loaded!\n")
except Exception as e:
    print(f"   ‚ùå Error: {e}\n")

# Test 3: Summarizer
print("3Ô∏è‚É£ Testing Summarizer...")
try:
    from transformers import AutoTokenizer, AutoModelForSeq2SeqLM
    tokenizer = AutoTokenizer.from_pretrained("marklicata/M365_h2_Text_Processing_and_Summarization")
    model = AutoModelForSeq2SeqLM.from_pretrained("marklicata/M365_h2_Text_Processing_and_Summarization")
    print("   ‚úÖ Summarizer loaded!\n")
except Exception as e:
    print(f"   ‚ùå Error: {e}\n")

# Test 4: Impact Analyzer
print("4Ô∏è‚É£ Testing Impact Analyzer...")
try:
    from transformers import AutoTokenizer, AutoModelForSequenceClassification
    tokenizer = AutoTokenizer.from_pretrained("nusret35/roberta-financial-news-impact-analysis")
    model = AutoModelForSequenceClassification.from_pretrained("nusret35/roberta-financial-news-impact-analysis")
    print("   ‚úÖ Impact Analyzer loaded!\n")
except Exception as e:
    print(f"   ‚ùå Error: {e}\n")

# Test 5: Code Analyzer
print("5Ô∏è‚É£ Testing Code Analyzer...")
try:
    from transformers import AutoTokenizer, AutoModelForCausalLM
    tokenizer = AutoTokenizer.from_pretrained("bigcode/starcoder2-7b")
    model = AutoModelForCausalLM.from_pretrained("bigcode/starcoder2-7b", device_map="auto", torch_dtype="auto")
    print("   ‚úÖ Code Analyzer loaded!\n")
except Exception as e:
    print(f"   ‚ùå Error: {e}\n")

print("=" * 60)
print("üéâ ALL MODELS TESTED!")
print("=" * 60)